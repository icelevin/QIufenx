package com.hb.utils.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.hb.utils.modle.CacheModle;
import com.hb.utils.modle.login.Passport;
import com.hb.utils.modle.login.Token;
import com.hb.utils.modle.SearchItemModel;
import com.hb.utils.modle.User;
import com.hb.utils.modle.UserInfo;

import com.hb.utils.dao.CacheModleDao;
import com.hb.utils.dao.PassportDao;
import com.hb.utils.dao.TokenDao;
import com.hb.utils.dao.SearchItemModelDao;
import com.hb.utils.dao.UserDao;
import com.hb.utils.dao.UserInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig cacheModleDaoConfig;
    private final DaoConfig passportDaoConfig;
    private final DaoConfig tokenDaoConfig;
    private final DaoConfig searchItemModelDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig userInfoDaoConfig;

    private final CacheModleDao cacheModleDao;
    private final PassportDao passportDao;
    private final TokenDao tokenDao;
    private final SearchItemModelDao searchItemModelDao;
    private final UserDao userDao;
    private final UserInfoDao userInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        cacheModleDaoConfig = daoConfigMap.get(CacheModleDao.class).clone();
        cacheModleDaoConfig.initIdentityScope(type);

        passportDaoConfig = daoConfigMap.get(PassportDao.class).clone();
        passportDaoConfig.initIdentityScope(type);

        tokenDaoConfig = daoConfigMap.get(TokenDao.class).clone();
        tokenDaoConfig.initIdentityScope(type);

        searchItemModelDaoConfig = daoConfigMap.get(SearchItemModelDao.class).clone();
        searchItemModelDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        cacheModleDao = new CacheModleDao(cacheModleDaoConfig, this);
        passportDao = new PassportDao(passportDaoConfig, this);
        tokenDao = new TokenDao(tokenDaoConfig, this);
        searchItemModelDao = new SearchItemModelDao(searchItemModelDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);

        registerDao(CacheModle.class, cacheModleDao);
        registerDao(Passport.class, passportDao);
        registerDao(Token.class, tokenDao);
        registerDao(SearchItemModel.class, searchItemModelDao);
        registerDao(User.class, userDao);
        registerDao(UserInfo.class, userInfoDao);
    }
    
    public void clear() {
        cacheModleDaoConfig.clearIdentityScope();
        passportDaoConfig.clearIdentityScope();
        tokenDaoConfig.clearIdentityScope();
        searchItemModelDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        userInfoDaoConfig.clearIdentityScope();
    }

    public CacheModleDao getCacheModleDao() {
        return cacheModleDao;
    }

    public PassportDao getPassportDao() {
        return passportDao;
    }

    public TokenDao getTokenDao() {
        return tokenDao;
    }

    public SearchItemModelDao getSearchItemModelDao() {
        return searchItemModelDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

}
